# Using an Image Data Set that has already splits into train and test sets
import os
data_dir=r'C:\Users\morva\Documents\Python Scripts\cell_images\cell_images'
os.listdir(data_dir)
#['test', 'train'] There are test and train forlder

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
from matplotlib.image import imread

# Create two variables
test_path=data_dir+'\\test\\'
train_path=data_dir+'\\train\\'

os.listdir(test_path)
#['parasitized', 'uninfected']

os.listdir(train_path+'parasitized')
#['C100P61ThinF_IMG_20150918_144104_cell_162.png',
 'C100P61ThinF_IMG_20150918_144104_cell_163.png',...
 'C116P77ThinF_IMG_20150930_172112_cell_67.png',
 'C116P77ThinF_IMG_20150930_172112_cell_68.png',
 ...]
 
os.listdir(train_path+'parasitized')[0]
#'C100P61ThinF_IMG_20150918_144104_cell_162.png'

para_cell=train_path+'parasitized\\'+'C100P61ThinF_IMG_20150918_144104_cell_162.png'
para_cell
'#C:\\Users\\morva\\Documents\\Python Scripts\\cell_images\\cell_images\\train\\parasitized\\C100P61ThinF_IMG_20150918_144104_cell_162.png'

imread(para_cell)
#array([[[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        ...,
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]],

       [[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        ...,
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]],

       [[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        ...,
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]],

       ...,

       [[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        ...,
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]],

       [[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        ...,
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]],

       [[0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.],
        ...,
        [0., 0., 0.],
        [0., 0., 0.],
        [0., 0., 0.]]], dtype=float32)   so we converted a png file into an array!
        
        
imread(para_cell).shape
#(148, 142, 3) is a color image
 
plt.imshow(imread(para_cell))
#<matplotlib.image.AxesImage at 0x111c8c98348>

os.listdir(train_path+'uninfected')[0]
uninfected_cell=train_path+'uninfected\\'+'C100P61ThinF_IMG_20150918_144104_cell_128.png'
uninfected_cell
plt.imshow(imread(uninfected_cell))
#<matplotlib.image.AxesImage at 0x111ca018d88>

dim1=[]
dim2=[]
for image_filename in os.listdir(test_path+'uninfected'):
    img=imread(test_path+'uninfected\\'+image_filename)
    d1,d2,colors=img.shape
    dim1.append(d1)
    dim2.append(d2)
    
#Get the average of dimensions
np.mean(dim1)
np.mean(dim2)
#130.75

image_shape=(130,130,3)

from tensorflow.keras.preprocessing.image import ImageDataGenerator

image_gen=ImageDataGenerator(rotation_range=20,width_shift_range=.1,height_shift_range=.1,shear_range=.1,zoom_range=.1,horizontal_flip=True,fill_mode='nearest')

image_gen.flow_from_directory(train_path)
#Found 24958 images belonging to 2 classes.

image_gen.flow_from_directory(test_path)
#Found 2600 images belonging to 2 classes.

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Conv2D,MaxPool2D,Dropout,Flatten
model=Sequential()
model.add(Conv2D(filters=32,kernel_size=(3,3),input_shape=image_shape,activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))
          
model.add(Conv2D(filters=64,kernel_size=(3,3),input_shape=image_shape,activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))

model.add(Conv2D(filters=62,kernel_size=(3,3),input_shape=image_shape,activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))

model.add(Flatten())
model.add(Dense(128,activation='relu'))
model.add(Dropout(.5))
model.add(Dense(1,activation='sigmoid'))
model.compile(loss='binary_crossentropy',optimizer='adam',metrics='accuracy')

from tensorflow.keras.callbacks import EarlyStopping
early_stop=EarlyStopping(monitor='val_loss',patience=2)
batch_size=16

train_image_gen=image_gen.flow_from_directory(train_path,target_size=image_shape[:2],color_mode='rgb',batch_size=batch_size, class_mode='binary')
#Found 24958 images belonging to 2 classes.


test_image_gen=image_gen.flow_from_directory(train_path,target_size=image_shape[:2],color_mode='rgb',batch_size=batch_size, class_mode='binary',shuffle=False)
#Found 24958 images belonging to 2 classes.






